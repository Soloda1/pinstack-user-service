name: User Service CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "–ö–æ–¥ –Ω–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω:"
          gofmt -s -l .
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run unit tests
      run: go test -v -count=1 -race -coverprofile=coverage.txt ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout user service
      uses: actions/checkout@v4

    - name: Checkout system tests
      uses: actions/checkout@v4
      with:
        repository: Soloda1/pinstack-system-tests
        path: pinstack-system-tests
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.2'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Start Full Infrastructure for Integration Tests
      working-directory: pinstack-system-tests
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        docker-compose -f docker-compose.test.yml up -d \
          user-db-test \
          user-migrator-test \
          user-service-test \
          auth-db-test \
          auth-migrator-test \
          auth-service-test \
          api-gateway-test

    - name: Wait for services to be ready
      run: |
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        
        # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
        timeout 60 bash -c 'until docker exec pinstack-user-db-test pg_isready -U postgres; do sleep 2; done'
        timeout 60 bash -c 'until docker exec pinstack-auth-db-test pg_isready -U postgres; do sleep 2; done'
        
        # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        sleep 60
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
        echo "=== User Service logs ==="
        docker logs pinstack-user-service-test --tail=20
        echo "=== Auth Service logs ==="
        docker logs pinstack-auth-service-test --tail=20
        echo "=== API Gateway logs ==="
        docker logs pinstack-api-gateway-test --tail=20

    - name: Run user-specific integration tests
      working-directory: pinstack-system-tests
      run: |
        echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è gateway_user..."
        go test -v -count=1 -timeout=10m ./internal/scenarios/integration/gateway_user/...

    - name: Collect logs on failure
      if: failure()
      working-directory: pinstack-system-tests
      run: |
        echo "=== –õ–æ–≥–∏ User Service ==="
        docker-compose -f docker-compose.test.yml logs user-service-test
        echo "=== –õ–æ–≥–∏ User Migrator ==="
        docker-compose -f docker-compose.test.yml logs user-migrator-test
        echo "=== –õ–æ–≥–∏ User Database ==="
        docker-compose -f docker-compose.test.yml logs user-db-test
        echo "=== –õ–æ–≥–∏ Auth Service ==="
        docker-compose -f docker-compose.test.yml logs auth-service-test
        echo "=== –õ–æ–≥–∏ Auth Migrator ==="
        docker-compose -f docker-compose.test.yml logs auth-migrator-test
        echo "=== –õ–æ–≥–∏ Auth Database ==="
        docker-compose -f docker-compose.test.yml logs auth-db-test
        echo "=== –õ–æ–≥–∏ API Gateway ==="
        docker-compose -f docker-compose.test.yml logs api-gateway-test

    - name: Stop services
      if: always()
      working-directory: pinstack-system-tests
      run: |
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose -f docker-compose.test.yml down -v
        
        echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker..."
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        docker container prune -f
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
        docker image prune -a -f
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ volume
        docker volume prune -f
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ç–∏
        docker network prune -f
        
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"